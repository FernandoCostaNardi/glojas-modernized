{
  "info": {
    "name": "StoreLegacyController API - Business",
    "description": "Collection para testes da API de Lojas Legacy da Business API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8089/api/business",
      "type": "string"
    },
    {
      "key": "legacy_api_url",
      "value": "http://localhost:8087/api/legacy",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Legacy Stores",
      "item": [
        {
          "name": "GET Unregistered Stores",
          "request": {
            "method": "GET",
            "header": [
              {"key": "Content-Type", "value": "application/json", "type": "text"},
              {"key": "Accept", "value": "application/json", "type": "text"}
            ],
            "url": {
              "raw": "{{base_url}}/legacy/stores",
              "host": ["{{base_url}}"],
              "path": ["legacy", "stores"]
            },
            "description": "Busca lojas da Legacy API que não estão cadastradas no sistema."
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is JSON array\", function () {",
                  "    pm.expect(pm.response.json()).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Each store has required fields\", function () {",
                  "    const stores = pm.response.json();",
                  "    if (stores.length > 0) {",
                  "        stores.forEach(store => {",
                  "            pm.expect(store).to.have.property('id');",
                  "            pm.expect(store).to.have.property('code');",
                  "            pm.expect(store).to.have.property('name');",
                  "            pm.expect(store).to.have.property('city');",
                  "            pm.expect(store).to.have.property('status');",
                  "        });",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"ID has 6 digits format\", function () {",
                  "    const stores = pm.response.json();",
                  "    if (stores.length > 0) {",
                  "        stores.forEach(store => {",
                  "            pm.expect(store.id).to.match(/^\\d{6}$/);",
                  "        });",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Store code is valid\", function () {",
                  "    const stores = pm.response.json();",
                  "    if (stores.length > 0) {",
                  "        stores.forEach(store => {",
                  "            pm.expect(store.code).to.be.a('string');",
                  "            pm.expect(store.code).to.have.length.greaterThan(0);",
                  "        });",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "GET Health Check",
          "request": {
            "method": "GET",
            "header": [
              {"key": "Content-Type", "value": "application/json", "type": "text"},
              {"key": "Accept", "value": "application/json", "type": "text"}
            ],
            "url": {
              "raw": "{{base_url}}/legacy/stores/health",
              "host": ["{{base_url}}"],
              "path": ["legacy", "stores", "health"]
            },
            "description": "Endpoint de health check para verificar se o controller está funcionando."
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is text\", function () {",
                  "    pm.expect(pm.response.text()).to.be.a('string');",
                  "});",
                  "",
                  "pm.test(\"Response contains health message\", function () {",
                  "    pm.expect(pm.response.text()).to.include('StoreLegacyController');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ],
      "description": "Endpoints para lojas da Legacy API"
    },
    {
      "name": "Test Scenarios",
      "item": [
        {
          "name": "Success Cases",
          "item": [
            {
              "name": "GET Unregistered Stores - With Results",
              "request": {
                "method": "GET",
                "header": [
                  {"key": "Content-Type", "value": "application/json"},
                  {"key": "Accept", "value": "application/json"}
                ],
                "url": {
                  "raw": "{{base_url}}/legacy/stores",
                  "host": ["{{base_url}}"],
                  "path": ["legacy", "stores"]
                }
              },
              "response": []
            },
            {
              "name": "GET Unregistered Stores - Empty List",
              "request": {
                "method": "GET",
                "header": [
                  {"key": "Content-Type", "value": "application/json"},
                  {"key": "Accept", "value": "application/json"}
                ],
                "url": {
                  "raw": "{{base_url}}/legacy/stores",
                  "host": ["{{base_url}}"],
                  "path": ["legacy", "stores"]
                }
              },
              "response": []
            },
            {
              "name": "GET Health Check - Success",
              "request": {
                "method": "GET",
                "header": [
                  {"key": "Content-Type", "value": "application/json"},
                  {"key": "Accept", "value": "application/json"}
                ],
                "url": {
                  "raw": "{{base_url}}/legacy/stores/health",
                  "host": ["{{base_url}}"],
                  "path": ["legacy", "stores", "health"]
                }
              },
              "response": []
            }
          ],
          "description": "Cenários de sucesso para validação"
        },
        {
          "name": "Error Cases",
          "item": [
            {
              "name": "GET Unregistered Stores - Legacy API Down",
              "request": {
                "method": "GET",
                "header": [
                  {"key": "Content-Type", "value": "application/json"},
                  {"key": "Accept", "value": "application/json"}
                ],
                "url": {
                  "raw": "{{base_url}}/legacy/stores",
                  "host": ["{{base_url}}"],
                  "path": ["legacy", "stores"]
                }
              },
              "response": []
            }
          ],
          "description": "Cenários de erro para validação"
        }
      ],
      "description": "Cenários de teste organizados por tipo"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "console.log('Executando requisição:', pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "console.log('Status Code:', pm.response.code);",
          "console.log('Response Time:', pm.response.responseTime + 'ms');"
        ]
      }
    }
  ]
}


