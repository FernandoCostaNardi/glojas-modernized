# Script para executar testes unit√°rios da API de Usu√°rios
# Este script executa todos os testes unit√°rios e de integra√ß√£o

Write-Host "=== EXECUTANDO TESTES UNIT√ÅRIOS DA API DE USU√ÅRIOS ===" -ForegroundColor Yellow
Write-Host ""

# Navegar para o diret√≥rio da Business API
Set-Location "business-api"

# Verificar se o Maven est√° dispon√≠vel
try {
    $mavenVersion = mvn -version 2>$null
    Write-Host "‚úÖ Maven encontrado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Maven n√£o encontrado. Certifique-se de que o Maven est√° instalado e no PATH." -ForegroundColor Red
    exit 1
}

# Limpar e compilar o projeto
Write-Host "`n1. Limpando e compilando o projeto..." -ForegroundColor Cyan
try {
    mvn clean compile -q
    Write-Host "‚úÖ Compila√ß√£o bem-sucedida" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro na compila√ß√£o" -ForegroundColor Red
    exit 1
}

# Executar testes unit√°rios
Write-Host "`n2. Executando testes unit√°rios..." -ForegroundColor Cyan
try {
    mvn test -Dtest="*Test" -q
    Write-Host "‚úÖ Testes unit√°rios executados com sucesso" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro na execu√ß√£o dos testes unit√°rios" -ForegroundColor Red
    exit 1
}

# Executar testes espec√≠ficos com relat√≥rio detalhado
Write-Host "`n3. Executando testes com relat√≥rio detalhado..." -ForegroundColor Cyan

# Testes do Controller
Write-Host "   - Testando UserController..." -ForegroundColor Gray
mvn test -Dtest="UserControllerTest" -q

# Testes do Service
Write-Host "   - Testando UserService..." -ForegroundColor Gray
mvn test -Dtest="UserServiceTest" -q

# Testes do Exception Handler
Write-Host "   - Testando GlobalExceptionHandler..." -ForegroundColor Gray
mvn test -Dtest="GlobalExceptionHandlerTest" -q

# Testes de Integra√ß√£o
Write-Host "   - Testando Integra√ß√£o..." -ForegroundColor Gray
mvn test -Dtest="UserApiIntegrationTest" -q

# Gerar relat√≥rio de cobertura (opcional)
Write-Host "`n4. Gerando relat√≥rio de cobertura..." -ForegroundColor Cyan
try {
    mvn jacoco:report -q
    Write-Host "‚úÖ Relat√≥rio de cobertura gerado" -ForegroundColor Green
    Write-Host "   Relat√≥rio dispon√≠vel em: target/site/jacoco/index.html" -ForegroundColor Gray
} catch {
    Write-Host "‚ö†Ô∏è  Relat√≥rio de cobertura n√£o dispon√≠vel (depend√™ncia n√£o configurada)" -ForegroundColor Yellow
}

# Executar todos os testes com relat√≥rio final
Write-Host "`n5. Executando todos os testes com relat√≥rio final..." -ForegroundColor Cyan
try {
    $testResult = mvn test -q 2>&1
    Write-Host "‚úÖ Todos os testes executados" -ForegroundColor Green
    
    # Extrair estat√≠sticas dos testes
    $testStats = $testResult | Select-String "Tests run:|BUILD SUCCESS|BUILD FAILURE"
    Write-Host "`n=== RESUMO DOS TESTES ===" -ForegroundColor Yellow
    $testStats | ForEach-Object { Write-Host $_ -ForegroundColor Gray }
    
} catch {
    Write-Host "‚ùå Erro na execu√ß√£o dos testes" -ForegroundColor Red
    exit 1
}

Write-Host "`n=== TESTES CONCLU√çDOS ===" -ForegroundColor Yellow
Write-Host "üéâ Todos os testes foram executados com sucesso!" -ForegroundColor Green
Write-Host ""
Write-Host "üìä Testes implementados:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ UserControllerTest - Testes unit√°rios do controller" -ForegroundColor Gray
Write-Host "   ‚Ä¢ UserServiceTest - Testes unit√°rios do service" -ForegroundColor Gray
Write-Host "   ‚Ä¢ GlobalExceptionHandlerTest - Testes do tratamento de exce√ß√µes" -ForegroundColor Gray
Write-Host "   ‚Ä¢ UserApiIntegrationTest - Testes de integra√ß√£o" -ForegroundColor Gray
Write-Host ""
Write-Host "üîç Cen√°rios testados:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Cria√ß√£o de usu√°rios com dados v√°lidos" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Valida√ß√£o de dados de entrada" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Verifica√ß√£o de unicidade de username/email" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Valida√ß√£o de roles existentes" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Tratamento de exce√ß√µes customizadas" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Respostas de erro estruturadas" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Health checks" -ForegroundColor Gray
Write-Host ""
Write-Host "üìù Para executar testes espec√≠ficos:" -ForegroundColor Cyan
Write-Host "   mvn test -Dtest=UserControllerTest" -ForegroundColor Gray
Write-Host "   mvn test -Dtest=UserServiceTest" -ForegroundColor Gray
Write-Host "   mvn test -Dtest=GlobalExceptionHandlerTest" -ForegroundColor Gray
Write-Host "   mvn test -Dtest=UserApiIntegrationTest" -ForegroundColor Gray
