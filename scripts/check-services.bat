@echo off
setlocal enabledelayedexpansion

:: ============================================
:: SCRIPT DE VERIFICA√á√ÉO - PROJETO GLOJAS
:: Verifica status de todos os servi√ßos
:: ============================================

title Projeto Glojas - Status dos Servi√ßos
color 0B

:: Configurar credenciais PostgreSQL
set PGHOST=localhost
set PGPORT=5432
set PGPASSWORD=F1e0r8n0#1

echo.
echo ========================================
echo    PROJETO GLOJAS - STATUS SERVI√áOS   
echo ========================================
echo.

:: ============================================
:: VERIFICAR POSTGRESQL
:: ============================================
echo üêò POSTGRESQL
echo ----------------------------------------

:: Verificar servi√ßo Windows
sc query postgresql-x64-15 2>nul | findstr "RUNNING" >nul 2>&1
if errorlevel 1 (
    echo Status Servi√ßo: ‚ùå PARADO
    set pg_service=PARADO
) else (
    echo Status Servi√ßo: ‚úÖ RODANDO
    set pg_service=RODANDO
)

:: Verificar porta
netstat -an | findstr "5432" | findstr "LISTENING" >nul 2>&1
if errorlevel 1 (
    echo Porta 5432: ‚ùå N√ÉO EST√Å ESCUTANDO
    set pg_port=FECHADA
) else (
    echo Porta 5432: ‚úÖ ESCUTANDO
    set pg_port=ABERTA
)

:: Testar conex√£o
"C:\Program Files\PostgreSQL\15\bin\psql.exe" -h localhost -p 5432 -U glojas_user -d glojas_business -c "SELECT version();" >nul 2>&1
if errorlevel 1 (
    echo Conex√£o BD: ‚ùå FALHA (verifique credenciais)
    set pg_connection=FALHA
) else (
    echo Conex√£o BD: ‚úÖ OK
    set pg_connection=OK
)

:: Verificar estrutura (tabelas)
"C:\Program Files\PostgreSQL\15\bin\psql.exe" -h localhost -p 5432 -U glojas_user -d glojas_business -c "\dt" 2>nul | findstr "usuarios" >nul 2>&1
if errorlevel 1 (
    echo Estrutura: ‚ùå TABELAS N√ÉO ENCONTRADAS
    set pg_structure=SEM_TABELAS
) else (
    echo Estrutura: ‚úÖ TABELAS OK
    set pg_structure=OK
)

echo.

:: ============================================
:: VERIFICAR REDIS
:: ============================================
echo üì¶ REDIS
echo ----------------------------------------

:: Verificar se Redis responde
redis-cli ping >nul 2>&1
if errorlevel 1 (
    echo Status: ‚ùå N√ÉO RESPONDE
    set redis_status=PARADO
) else (
    echo Status: ‚úÖ RESPONDENDO
    set redis_status=RODANDO
)

:: Verificar porta
netstat -an | findstr "6379" | findstr "LISTENING" >nul 2>&1
if errorlevel 1 (
    echo Porta 6379: ‚ùå N√ÉO EST√Å ESCUTANDO  
    set redis_port=FECHADA
) else (
    echo Porta 6379: ‚úÖ ESCUTANDO
    set redis_port=ABERTA
)

:: Testar opera√ß√µes
if "!redis_status!" equ "RODANDO" (
    redis-cli set test_check "ok" >nul 2>&1
    redis-cli get test_check | findstr "ok" >nul 2>&1
    if errorlevel 1 (
        echo Opera√ß√µes: ‚ùå FALHA NAS OPERA√á√ïES
        set redis_ops=FALHA
    ) else (
        echo Opera√ß√µes: ‚úÖ OK
        set redis_ops=OK
        redis-cli del test_check >nul 2>&1
    )
) else (
    echo Opera√ß√µes: ‚ùå N/A (Redis parado)
    set redis_ops=NA
)

:: Verificar mem√≥ria (se estiver rodando)
if "!redis_status!" equ "RODANDO" (
    for /f "tokens=2" %%i in ('redis-cli info memory ^| findstr "used_memory_human"') do (
        echo Uso Mem√≥ria: %%i
    )
)

echo.

:: ============================================
:: VERIFICAR PROCESSOS APLICA√á√ïES
:: ============================================
echo üöÄ APLICA√á√ïES
echo ----------------------------------------

:: Verificar processos Java (APIs)
set javacount=0
for /f %%i in ('tasklist /fi "imagename eq java.exe" 2^>nul ^| find /c "java.exe"') do set javacount=%%i

if !javacount! gtr 0 (
    echo Aplica√ß√µes Java: ‚úÖ !javacount! processo(s) rodando
    
    :: Tentar identificar quais APIs est√£o rodando
    curl -s http://localhost:8089/api/business/health >nul 2>&1
    if not errorlevel 1 (
        echo   ‚Ä¢ Business API: ‚úÖ Rodando (porta 8089)
    ) else (
        echo   ‚Ä¢ Business API: ‚ùå N√£o responde (porta 8087)
    )
    
    curl -s http://localhost:8087/api/legacy/health >nul 2>&1
    if not errorlevel 1 (
        echo   ‚Ä¢ Legacy API: ‚úÖ Rodando (porta 8087)
    ) else (
        echo   ‚Ä¢ Legacy API: ‚ùå N√£o responde (porta 8087)
    )
    
) else (
    echo Aplica√ß√µes Java: ‚ùå Nenhuma rodando
    echo   ‚Ä¢ Business API: ‚ùå N√£o iniciada
    echo   ‚Ä¢ Legacy API: ‚ùå N√£o iniciada
)

:: Verificar processos Node.js (Frontend)
set nodecount=0
for /f %%i in ('tasklist /fi "imagename eq node.exe" 2^>nul ^| find /c "node.exe"') do set nodecount=%%i

if !nodecount! gtr 0 (
    echo Frontend React: ‚úÖ !nodecount! processo(s) Node rodando
    
    :: Verificar se frontend responde
    curl -s http://localhost:3000 >nul 2>&1
    if not errorlevel 1 (
        echo   ‚Ä¢ Frontend: ‚úÖ Respondendo (porta 3000)
    ) else (
        echo   ‚Ä¢ Frontend: ‚ö†Ô∏è  Processo rodando mas n√£o responde
    )
) else (
    echo Frontend React: ‚ùå N√£o iniciado
)

echo.

:: ============================================
:: RESUMO GERAL
:: ============================================
echo ========================================
echo              RESUMO GERAL             
echo ========================================
echo.

:: Calcular score geral
set score=0
if "!pg_service!" equ "RODANDO" set /a score+=1
if "!pg_port!" equ "ABERTA" set /a score+=1  
if "!pg_connection!" equ "OK" set /a score+=1
if "!pg_structure!" equ "OK" set /a score+=1
if "!redis_status!" equ "RODANDO" set /a score+=1
if "!redis_port!" equ "ABERTA" set /a score+=1
if "!redis_ops!" equ "OK" set /a score+=1

echo üìä Score de Sa√∫de: !score!/7

if !score! geq 6 (
    echo üéØ Status Geral: ‚úÖ EXCELENTE - Pronto para desenvolvimento
) else if !score! geq 4 (
    echo üéØ Status Geral: ‚ö†Ô∏è  BOM - Alguns ajustes necess√°rios
) else (
    echo üéØ Status Geral: ‚ùå CR√çTICO - Requer aten√ß√£o
)

echo.
echo üìù Recomenda√ß√µes:
if "!pg_service!" neq "RODANDO" echo   ‚Ä¢ Execute start-all.bat para iniciar PostgreSQL
if "!pg_structure!" neq "OK" echo   ‚Ä¢ Execute INFRA-003 para criar estrutura do banco  
if "!redis_status!" neq "RODANDO" echo   ‚Ä¢ Execute start-all.bat para iniciar Redis
if !javacount! equ 0 echo   ‚Ä¢ Inicie as APIs Java (Legacy e Business)
if !nodecount! equ 0 echo   ‚Ä¢ Inicie o Frontend React

echo.
echo üîÑ Scripts dispon√≠veis:
echo   ‚Ä¢ start-all.bat - Iniciar servi√ßos
echo   ‚Ä¢ stop-all.bat - Parar servi√ßos  
echo   ‚Ä¢ check-services.bat - Este script
echo.
pause